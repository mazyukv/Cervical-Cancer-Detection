✅ 1. Dataset

Same dataset, with the same train/val/test split. 
I need to do this to vitdet, like in the paper and in the chat called training process explanation. But percentage is the same.


Common choices: COCO, Pascal VOC, or a custom dataset. ✅


Preprocessing (e.g. resizing, normalization) should be consistent.


✅ 2. Training Setup

Number of epochs or total training iterations: Keep this the same for both models. 
40 for both. I will have to calculate it for vitdet in max itterations. 


Batch size: Must be the same to ensure fair memory and runtime comparisons. ✅


Learning rate schedule: Use equivalent schedules (e.g. same LR warm-up, decay steps).
need to do this for vitdet the same way as for the faster r cnn? 


Optimizer: Same type (SGD, AdamW, etc.) and parameters (momentum, weight decay).
right now AdamW is already same. momentum and weight decay need to be changed.


Data augmentations: Identical augmentations (e.g. horizontal flips, color jitter).
no data augumentation.


Loss functions: These are model-specific (e.g., Faster R-CNN uses RPN loss), so you don't match the type, but don’t add or remove any loss components from defaults. ✅


✅ 3. Hardware and Environment
Same GPU and number of GPUs (important for VRAM and speed comparisons). ✅


Same compute backend (CUDA version, cuDNN, PyTorch/Detectron2 versions). ✅


Same number of data loader workers and CPU threads if measuring time. ✅


✅ 4. Evaluation Metrics (these needs to be measured in the same way.)

Use the same metrics, typically:

mAP (mean Average Precision), like COCO-style AP@[.5:.95], AP50, AP75. ✅


Inference time per image. ✅


Training time per epoch or per iteration. ✅


VRAM usage during training and inference. ✅


Optional but Useful

Model size (in parameters) for reference.


Number of FLOPs (Floating Point Operations) for complexity.


Throughput (images per second) during inference.

pip uninstall torch torchvision torchaudio

pip install torch==2.0.0 torchvision==0.15.0 torchaudio==2.0.0 --index-url https://download.pytorch.org/whl/cu118

pip install torch==2.3.1+cu118 torchvision==0.18.1+cu118 torchaudio==2.3.1+cu118 -f https://download.pytorch.org/whl/torch_stable.html

python -m pip install git+https://github.com/facebookresearch/detectron2.git